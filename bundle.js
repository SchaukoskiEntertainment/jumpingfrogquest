/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Main.js":
/*!*********************!*\
  !*** ./src/Main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scenes_Level1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scenes/Level1.js */ \"./src/scenes/Level1.js\");\n/* harmony import */ var _scenes_Level10_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scenes/Level10.js */ \"./src/scenes/Level10.js\");\n/* harmony import */ var _scenes_Level11_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scenes/Level11.js */ \"./src/scenes/Level11.js\");\n/* harmony import */ var _scenes_Level12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scenes/Level12.js */ \"./src/scenes/Level12.js\");\n/* harmony import */ var _scenes_Level13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scenes/Level13.js */ \"./src/scenes/Level13.js\");\n/* harmony import */ var _scenes_Level14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scenes/Level14.js */ \"./src/scenes/Level14.js\");\n/* harmony import */ var _scenes_Level15_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scenes/Level15.js */ \"./src/scenes/Level15.js\");\n/* harmony import */ var _scenes_Level2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scenes/Level2.js */ \"./src/scenes/Level2.js\");\n/* harmony import */ var _scenes_Level3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./scenes/Level3.js */ \"./src/scenes/Level3.js\");\n/* harmony import */ var _scenes_Level4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./scenes/Level4.js */ \"./src/scenes/Level4.js\");\n/* harmony import */ var _scenes_Level5_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./scenes/Level5.js */ \"./src/scenes/Level5.js\");\n/* harmony import */ var _scenes_Level6_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./scenes/Level6.js */ \"./src/scenes/Level6.js\");\n/* harmony import */ var _scenes_Level7_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./scenes/Level7.js */ \"./src/scenes/Level7.js\");\n/* harmony import */ var _scenes_Level8_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./scenes/Level8.js */ \"./src/scenes/Level8.js\");\n/* harmony import */ var _scenes_Level9_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./scenes/Level9.js */ \"./src/scenes/Level9.js\");\n/* harmony import */ var _scenes_LevelSelection_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./scenes/LevelSelection.js */ \"./src/scenes/LevelSelection.js\");\n/* harmony import */ var _scenes_LoadingScene_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./scenes/LoadingScene.js */ \"./src/scenes/LoadingScene.js\");\n/* harmony import */ var _scenes_MainMenu_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./scenes/MainMenu.js */ \"./src/scenes/MainMenu.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 576,\r\n    height: 1024,\r\n    parent: \"game\",\r\n    backgroundColor: '#000000',\r\n    scene: [\r\n        _scenes_LoadingScene_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\r\n        _scenes_MainMenu_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\r\n        _scenes_LevelSelection_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\r\n        _scenes_Level1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n        _scenes_Level2_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\r\n        _scenes_Level3_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\r\n        _scenes_Level4_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\r\n        _scenes_Level5_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\r\n        _scenes_Level6_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\r\n        _scenes_Level7_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\r\n        _scenes_Level8_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\r\n        _scenes_Level9_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\r\n        _scenes_Level10_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\r\n        _scenes_Level11_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n        _scenes_Level12_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\r\n        _scenes_Level13_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\r\n        _scenes_Level14_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\r\n        _scenes_Level15_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\r\n    ],\r\n    scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n    },\r\n    render: {\r\n        pixelArt: true\r\n    }\r\n}\r\n\r\nconst game = new Phaser.Game(config);\n\n//# sourceURL=webpack://jumpingfrogquest/./src/Main.js?");

/***/ }),

/***/ "./src/collectables/Collectables.js":
/*!******************************************!*\
  !*** ./src/collectables/Collectables.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Collectables)\n/* harmony export */ });\nclass Collectables {\r\n    apples = [];\r\n    scene;\r\n    constructor(scene, player, hud) {\r\n        this.scene = scene;\r\n        this.player = player;\r\n        this.hud = hud;\r\n    }\r\n\r\n    create() {\r\n        // Add overlap detection between the player and apples\r\n        this.apples.forEach(apple => {\r\n            this.scene.physics.add.overlap(apple, this.player, this.collectApple, null, this);\r\n        });\r\n    }\r\n\r\n    // Callback function when the player collects an apple\r\n    collectApple(apple) {\r\n        if (!apple.collected) {\r\n            this.scene.sound.add('apple-collected').play({ volume: 1.0 });\r\n            const hudAppleX = this.hud.applesCollectedSprite.x;\r\n            const hudAppleY = this.hud.applesCollectedSprite.y;\r\n            apple.collected = true;\r\n\r\n            // Calculate the distance between the apple and the HUD\r\n            const distance = Phaser.Math.Distance.Between(apple.x, apple.y, hudAppleX, hudAppleY);\r\n\r\n            // Set a base speed (pixels per millisecond)\r\n            const speed = 1; // Adjust this speed as desired\r\n\r\n            // Calculate the duration based on distance and speed\r\n            const duration = distance / speed;\r\n\r\n            // Tween to move the apple to the HUD position with calculated duration\r\n            this.scene.tweens.add({\r\n                targets: apple,\r\n                x: hudAppleX,\r\n                y: hudAppleY,\r\n                duration: duration,\r\n                onComplete: () => {\r\n                    apple.disableBody(true, true);\r\n                    this.hud.updateAppleCount(++this.hud.applesCollected);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    addApple(x, y) {\r\n        // Make apples physics objects so they can be detected in overlap\r\n        const apple = this.scene.physics.add.sprite(x, y, 'apple').play('apple-idle');\r\n        apple.body.setAllowGravity(false); // Disable gravity completely for the apple\r\n        apple.body.setImmovable(true); // Make apples immovable by collisions\r\n        apple.collected = false; // Add a property to track if collected\r\n        apple.body.setSize(10, 10);\r\n        apple.setDepth(2);\r\n        apple.setScale(2);\r\n        this.apples.push(apple); // Store apples in an array if needed\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/collectables/Collectables.js?");

/***/ }),

/***/ "./src/endlevel/EndLevel.js":
/*!**********************************!*\
  !*** ./src/endlevel/EndLevel.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EndLevel)\n/* harmony export */ });\nclass EndLevel extends Phaser.Physics.Arcade.Sprite {\r\n    triggerEndLevel = false;\r\n    activateEndLevel = false;\r\n    constructor(scene, x, y, texture, player, nextLevelName) {\r\n        super(scene, x, y, texture).setScale(2);\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.player = player;\r\n        this.nextLevelName = nextLevelName;\r\n    }\r\n\r\n    turnOnEndLevel() {\r\n        this.activateEndLevel = true;\r\n        this.clearTint();\r\n        this.scene.sound.add('endlevel-unlocked').play({ volume: 1.0 });\r\n    }\r\n\r\n    create() {\r\n        this.scene.add.existing(this); // Add to the scene's display list\r\n        this.scene.physics.add.existing(this);\r\n        this.setTintFill(0x000000);\r\n        this.scene.physics.world.enable(this);\r\n        this.body.setImmovable(true);\r\n        this.body.setAllowGravity(false);\r\n        this.body.setSize(10, 32);\r\n        this.body.setOffset(29, 20);\r\n        this.setScale(2);\r\n\r\n        // Add overlap detection between player and end level\r\n        this.scene.physics.add.overlap(this.player, this, this.reachEndLevel, null, this);\r\n\r\n        // Confetti group\r\n        this.confettiGroup = this.scene.add.group({\r\n            defaultKey: 'confetti',\r\n            maxSize: 50\r\n        });\r\n\r\n        if (!this.scene.anims.exists('end-pressed')) {\r\n            this.scene.anims.create({\r\n                key: 'end-pressed',\r\n                frames: this.anims.generateFrameNumbers('end-pressed', { start: 0, end: 7 }),\r\n                frameRate: 20\r\n            });\r\n        }\r\n    }\r\n\r\n    reachEndLevel() {\r\n        if (this.triggerEndLevel || !this.activateEndLevel)\r\n            return false;\r\n        // Save the new level in localStorage\r\n        const lastLevel = localStorage.getItem('lastLevel') ? parseInt(localStorage.getItem('lastLevel')) : 1;\r\n        let levelNumber = 1;\r\n        if (this.nextLevelName == \"MainMenu\") {\r\n            levelNumber = 15;\r\n        } else {\r\n            levelNumber = parseInt(this.nextLevelName.match(/\\d+/)[0]);\r\n        }\r\n        // Update the last level if the new level is higher\r\n        if (levelNumber > lastLevel) {\r\n            localStorage.setItem('lastLevel', levelNumber);\r\n        }\r\n        this.triggerEndLevel = true;\r\n        // Play the 'end-pressed' animation\r\n        this.play('end-pressed');\r\n        this.scene.sound.add('winlevel').play({ volume: 1.0 });\r\n\r\n        // Fire confetti around the endLevel\r\n        for (let i = 0; i < 100; i++) {\r\n            let confetti = this.confettiGroup.get();\r\n            if (confetti) {\r\n                confetti.setActive(true).setVisible(true);\r\n                confetti.setPosition(this.x, this.y);\r\n                confetti.setScale(1); // 16x16 tiles, no scale adjustment needed\r\n                this.scene.physics.world.enable(confetti);\r\n\r\n                confetti.setDepth(3); // Set a high depth value\r\n\r\n                // Choose a random frame (0-5) for the confetti\r\n                const randomFrame = Phaser.Math.Between(0, 5);\r\n                confetti.setFrame(randomFrame);\r\n\r\n                // Set random velocity and direction for confetti\r\n                const angle = Phaser.Math.Between(0, 360);\r\n                const velocity = Phaser.Math.Between(100, 200);\r\n                confetti.body.setVelocity(\r\n                    velocity * Math.cos(angle),\r\n                    velocity * Math.sin(angle)\r\n                );\r\n\r\n                // Disable confetti after 2 seconds\r\n                this.scene.time.delayedCall(500, () => {\r\n                    confetti.setActive(false).setVisible(false);\r\n                    confetti.body.stop();\r\n                    this.confettiGroup.killAndHide(confetti);\r\n                    // Start a fade-out effect before transitioning to Level2\r\n                    this.scene.cameras.main.fadeOut(100, 0, 0, 0);\r\n\r\n                    // When fade-out completes, start the next level\r\n                    this.scene.cameras.main.once('camerafadeoutcomplete', () => {\r\n                        this.scene.scene.start(this.nextLevelName);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/endlevel/EndLevel.js?");

/***/ }),

/***/ "./src/enemies/Enemies.js":
/*!********************************!*\
  !*** ./src/enemies/Enemies.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Enemies)\n/* harmony export */ });\nclass Enemies {\r\n    constructor(scene, player, hud) {\r\n        this.scene = scene;\r\n        this.player = player;\r\n        this.hud = hud;\r\n        this.enemies = [];\r\n    }\r\n\r\n    create() {\r\n        this.enemies.forEach(enemy => {\r\n            this.scene.physics.add.overlap(enemy.sprite, this.player, this.handleCollision, null, this);\r\n            if (enemy.speed > 0)\r\n                enemy.sprite.anims.play('enemy-mushroom-run');\r\n        });\r\n    }\r\n\r\n    // Callback function when the player collects an mushroom\r\n    collectEnemy(enemy) {\r\n        // Check if the mushroom has already been collected\r\n        if (!enemy.collected) {\r\n            this.scene.sound.add('apple-collected').play({ volume: 1.0 });\r\n            enemy.collected = true; // Mark the mushroom as collected\r\n\r\n            // Clone the enemy sprite to use for the tween animation\r\n            const clonedEnemy = this.scene.add.sprite(enemy.x, enemy.y, 'enemy-mushroom-idle').play('enemy-mushroom-idle');\r\n            clonedEnemy.setScale(enemy.scaleX, enemy.scaleY); // Set the same scale\r\n            clonedEnemy.setDepth(2);\r\n\r\n            // Get the HUD mushroom position\r\n            const hudMushroomX = this.hud.mushroomKilledSprite.x;\r\n            const hudMushroomY = this.hud.mushroomKilledSprite.y;\r\n\r\n            // Calculate the distance between the enemy and the HUD\r\n            const distance = Phaser.Math.Distance.Between(enemy.x, enemy.y, hudMushroomX, hudMushroomY);\r\n\r\n            // Set a base speed (pixels per millisecond)\r\n            const speed = 1; // Adjust this speed as desired\r\n\r\n            // Calculate the duration based on distance and speed\r\n            const duration = distance / speed;\r\n\r\n            // Tween to move the enemy to the HUD position with calculated duration\r\n            this.scene.tweens.add({\r\n                targets: clonedEnemy,\r\n                x: hudMushroomX,\r\n                y: hudMushroomY,\r\n                duration: duration,\r\n                onComplete: () => {\r\n                    // Disable the cloned enemy after the animation\r\n                    clonedEnemy.destroy();  // Remove the cloned sprite after the tween completes\r\n\r\n                    // Update the mushroom count in the HUD\r\n                    this.hud.updateMushroomCount(++this.hud.mushroomCollected);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    addEnemy(x, y, patrolDistance = 200, speed = 50) {\r\n        const enemy = this.scene.physics.add.sprite(x, y, 'enemy');\r\n        if (speed == 0) {\r\n            enemy.play(\"enemy-mushroom-idle\");\r\n        }\r\n        enemy.setDepth(2);\r\n        enemy.setScale(2);\r\n        enemy.setSize(20, 20);\r\n        enemy.setOffset(6, 12);\r\n        enemy.collected = false;\r\n        // Define patrol information for this enemy\r\n        const patrolData = {\r\n            sprite: enemy,\r\n            startX: x,\r\n            endX: x + patrolDistance,  // Patrol from x to x + patrolDistance\r\n            speed: speed,  // Patrol speed\r\n            direction: 1  // 1 = right, -1 = left\r\n        };\r\n        this.enemies.push(patrolData);\r\n    }\r\n\r\n    handleCollision(enemy, player) {\r\n        if (player.body.velocity.y > 0 && player.y - 16 * 2 < enemy.y + 16 * 2) {\r\n            // Player is falling and above the enemy\r\n            this.killEnemy(enemy);\r\n            this.player.body.setVelocityY(-300);  // Make the player bounce upwards\r\n        } else {\r\n            // Player touches the enemy from the side or below -> player dies\r\n            this.player.playerDeath();\r\n        }\r\n    }\r\n\r\n    killEnemy(enemy) {\r\n        this.scene.sound.add('hitenemy').play({ volume: 1.0 });\r\n        enemy.anims.play('enemy-mushroom-hit');  // Play enemy hit animation\r\n        enemy.body.enable = false;  // Disable enemy physics body\r\n        enemy.setVelocity(0, 0);  // Stop enemy movement\r\n        enemy.killed = true;\r\n        this.scene.time.delayedCall(500, () => {  // Delay for death animation\r\n            this.collectEnemy(enemy);\r\n            enemy.destroy();  // Remove enemy from the scene\r\n            // Remove the killed enemy from the this.enemies array\r\n            this.enemies = this.enemies.filter(enemyData => enemyData.sprite !== enemy);\r\n        });\r\n    }\r\n\r\n    update() {\r\n        for (const enemyData of this.enemies) {\r\n            if (enemyData.sprite.killed || enemyData.speed == 0)\r\n                continue;\r\n            const enemy = enemyData.sprite;\r\n\r\n            // Patrol logic: Move the enemy between startX and endX\r\n            if (enemy.x >= enemyData.endX) {\r\n                enemyData.direction = -1;  // Change direction to left\r\n                enemy.setFlipX(false);  // Flip sprite horizontally\r\n            } else if (enemy.x <= enemyData.startX) {\r\n                enemyData.direction = 1;  // Change direction to right\r\n                enemy.setFlipX(true);  // Reset sprite orientation\r\n            }\r\n\r\n            // Move enemy in the current direction\r\n            enemy.setVelocityX(enemyData.speed * enemyData.direction);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/enemies/Enemies.js?");

/***/ }),

/***/ "./src/hud/HUD.js":
/*!************************!*\
  !*** ./src/hud/HUD.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HUD)\n/* harmony export */ });\n\r\nclass HUD {\r\n    applesCollected = 0;\r\n    mushroomCollected = 0;\r\n    totalApplesNeeded = 0;\r\n    totalMushroomNeeded = 0;\r\n    constructor(scene, totalApplesNeeded, endLevel, totalMushroomNeeded = 0) {\r\n        this.scene = scene;\r\n        this.totalApplesNeeded = totalApplesNeeded;\r\n        this.totalMushroomNeeded = totalMushroomNeeded;\r\n        this.endLevel = endLevel;\r\n        this.isPaused = false;\r\n    }\r\n\r\n    create() {\r\n        this.settingsBtn = this.scene.add.sprite(this.scene.sys.canvas.width, 0, 'settingsBtn').setOrigin(1, 0);\r\n        this.settingsBtn.setScale(3);\r\n        this.settingsBtn.setDepth(4);\r\n\r\n        // Check if the current scene is MainMenu or LevelSelection and disable settingsBtn if true\r\n        const isMainMenuOrLevelSelection = this.scene.scene.key === 'MainMenu' || this.scene.scene.key === 'LevelSelection';\r\n        if (isMainMenuOrLevelSelection) {\r\n            this.settingsBtn.setVisible(false);  // Hide the button\r\n            this.settingsBtn.disableInteractive();  // Disable interactions\r\n        } else {\r\n            // Add an input event listener for settingsBtn if the scene is not MainMenu or LevelSelection\r\n            this.settingsBtn.setInteractive().on('pointerdown', () => {\r\n                this.toggleMenu(true);\r\n                this.pauseGame(); // Pause the game when the settings button is clicked\r\n            });\r\n        }\r\n\r\n        // Semi-transparent background for the menu\r\n        this.menuBackground = this.scene.add.rectangle(0, 0, this.scene.sys.canvas.width, this.scene.sys.canvas.height, 0x000000, 0.5);\r\n        this.menuBackground.setOrigin(0, 0).setDepth(5).setVisible(false);\r\n\r\n        // Horizontal positioning for back, restart, and play buttons\r\n        const centerX = this.scene.sys.canvas.width / 2;\r\n        const centerY = this.scene.sys.canvas.height / 2;\r\n        const buttonSpacing = 120; // Adjust this value as needed for spacing between buttons\r\n\r\n        // Buttons aligned horizontally\r\n        this.backBtn = this.scene.add.sprite(centerX - buttonSpacing, centerY, 'backBtn').setDepth(6).setScale(5).setInteractive();\r\n        this.restartBtn = this.scene.add.sprite(centerX, centerY, 'restartBtn').setDepth(6).setScale(4).setInteractive();\r\n        this.playBtn = this.scene.add.sprite(centerX + buttonSpacing, centerY, 'playBtn').setDepth(6).setScale(4).setInteractive();\r\n\r\n\r\n        // Hide the buttons initially\r\n        this.restartBtn.setVisible(false);\r\n        this.backBtn.setVisible(false);\r\n        this.playBtn.setVisible(false);\r\n\r\n        this.restartBtn.on('pointerdown', () => {\r\n            this.toggleMenu(false);\r\n            this.scene.scene.restart();\r\n        });\r\n\r\n        this.backBtn.on('pointerdown', () => {\r\n            this.toggleMenu(false);\r\n            this.scene.scene.start(\"MainMenu\");\r\n        });\r\n\r\n        this.playBtn.on('pointerdown', () => {\r\n            this.toggleMenu(false);\r\n            this.resumeGame(); // Resume the game when play button is clicked\r\n        });\r\n\r\n        // Create a sprite for the apples collected\r\n        this.applesCollectedSprite = this.scene.add.sprite(40, 35, 'apple').play('apple-idle');\r\n        this.applesCollectedSprite.setScale(3);\r\n        this.applesCollectedSprite.setDepth(4);\r\n\r\n        if (this.totalMushroomNeeded != 0) {\r\n            this.mushroomKilledSprite = this.scene.add.sprite(200, 15, 'enemy-mushroom-idle').play('enemy-mushroom-idle');\r\n            this.mushroomKilledSprite.setScale(2);\r\n            this.mushroomKilledSprite.setDepth(4);\r\n\r\n            // Add text for the number of apples collected\r\n            this.mushroomKilledText = this.scene.add.text(200 + 40, 13, '0' + \"/\" + this.totalMushroomNeeded.toString(), {\r\n                fontSize: '48px',      // Font size\r\n                fill: '#ffffff'        // Text color\r\n            });\r\n\r\n            this.mushroomKilledText.setShadow(2, 2, '#000000', false, true); // Offset x, Offset y, Shadow color, Shadow fill, Shadow stroke\r\n\r\n            this.mushroomKilledText.setDepth(4);\r\n        }\r\n\r\n        // Add text for the number of apples collected\r\n        this.applesCollectedText = this.scene.add.text(70, 13, '0' + \"/\" + this.totalApplesNeeded.toString(), {\r\n            fontSize: '48px',      // Font size\r\n            fill: '#ffffff'        // Text color\r\n        });\r\n\r\n        this.applesCollectedText.setShadow(2, 2, '#000000', false, true); // Offset x, Offset y, Shadow color, Shadow fill, Shadow stroke\r\n\r\n        this.applesCollectedText.setDepth(4);\r\n\r\n        // Optionally, you can create a method to update the text when apples are collected\r\n        this.updateAppleCount(this.applesCollected); // Initialize with 0 apples collected\r\n    }\r\n\r\n    // Method to pause the game\r\n    pauseGame() {\r\n        if (!this.isPaused) {\r\n            this.scene.physics.pause();\r\n            this.isPaused = true; // Update the paused state\r\n        }\r\n    }\r\n\r\n    // Method to resume the game\r\n    resumeGame() {\r\n        if (this.isPaused) {\r\n            this.scene.physics.resume();\r\n            this.isPaused = false; // Update the paused state\r\n        }\r\n    }\r\n\r\n    // Function to show/hide the menu\r\n    toggleMenu(show) {\r\n        this.menuBackground.setVisible(show);\r\n        this.playBtn.setVisible(show);\r\n        this.restartBtn.setVisible(show);\r\n        this.backBtn.setVisible(show);\r\n    }\r\n\r\n    // Method to update the apple count\r\n    updateAppleCount(count) {\r\n        this.applesCollectedText.setText(count.toString() + \"/\" + this.totalApplesNeeded.toString());\r\n\r\n        this.allItemsWereCollected();\r\n    }\r\n\r\n    // Method to update the mushroom count\r\n    updateMushroomCount(count) {\r\n        this.mushroomKilledText.setText(count.toString() + \"/\" + this.totalMushroomNeeded.toString());\r\n\r\n        this.allItemsWereCollected();\r\n    }\r\n\r\n    allItemsWereCollected() {\r\n        if (this.totalApplesNeeded == this.applesCollected) {\r\n            if (this.totalMushroomNeeded != 0) {\r\n                if (this.totalMushroomNeeded == this.mushroomCollected) {\r\n                    this.endLevel.turnOnEndLevel();\r\n                }\r\n            } else {\r\n                this.endLevel.turnOnEndLevel();\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/hud/HUD.js?");

/***/ }),

/***/ "./src/player/Player.js":
/*!******************************!*\
  !*** ./src/player/Player.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Player)\n/* harmony export */ });\nclass Player extends Phaser.Physics.Arcade.Sprite {\r\n    touches = {};\r\n    isPlayerDied = false;\r\n    spawn;\r\n    speed = 2;\r\n    coyoteTime = 100; // in milliseconds\r\n    coyoteTimeTimer = 0; // tracks time in air without ground contact\r\n    isJumping = false;\r\n    hasCoyoteTime = false;\r\n    constructor(scene, x, y, texture, flipped = false) {\r\n        super(scene, x, y, texture);\r\n        this.scene = scene;\r\n        this.spawn = { x, y };\r\n        this.flipped = flipped;\r\n    }\r\n\r\n    updateCoyoteTime() {\r\n        if (this.body.blocked.down) {\r\n            // Reset coyote timer when touching the ground\r\n            this.coyoteTimeTimer = this.coyoteTime;\r\n            this.hasCoyoteTime = true;\r\n            this.isJumping = false;\r\n        } else if (this.coyoteTimeTimer > 0) {\r\n            // Reduce coyote timer when in the air\r\n            this.coyoteTimeTimer -= this.scene.game.loop.delta;\r\n        } else {\r\n            this.hasCoyoteTime = false;\r\n        }\r\n    }\r\n\r\n    playerDeath() {\r\n        if (this.isPlayerDied)\r\n            return;\r\n        this.isPlayerDied = true;\r\n        this.anims.play('death');\r\n        this.scene.sound.add('player-death').play({ volume: 0.2 });\r\n        this.on('animationcomplete-death', () => {\r\n            this.scene.scene.restart();\r\n        });\r\n    }\r\n\r\n    create() {\r\n        // Add the player to the scene\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this);\r\n        this.body.enable = false;\r\n        //this.setOrigin(0, 0);\r\n        const playerWidth = 22; // Adjust width as needed\r\n        const playerHeight = 26; // Adjust height as needed\r\n        const offsetY = 6; // Adjust based on how much you reduce the height\r\n        const offsetX = 5; // Adjust based on how much you reduce the height\r\n\r\n        this.body.setSize(playerWidth, playerHeight);\r\n        this.body.setOffset(offsetX, offsetY);\r\n        this.setScale(2);\r\n\r\n        // Set this drag value to remove player jiterring\r\n        this.body.setDrag(0.1);\r\n\r\n        // Input handling\r\n        this.scene.cursors = this.scene.input.keyboard.createCursorKeys();\r\n        this.scene.keys = this.scene.input.keyboard.addKeys({\r\n            'A': Phaser.Input.Keyboard.KeyCodes.A,\r\n            'D': Phaser.Input.Keyboard.KeyCodes.D,\r\n            'W': Phaser.Input.Keyboard.KeyCodes.W,\r\n            'SPACE': Phaser.Input.Keyboard.KeyCodes.SPACE // Add Spacebar for jumping\r\n        });\r\n\r\n        // Set up player properties\r\n        this.setCollideWorldBounds(true); // Prevent the player from going off the screen\r\n        this.setGravityY(300); // You can adjust gravity here if needed\r\n\r\n        // Initialize player animations\r\n        if (!this.scene.anims.exists('walk')) {\r\n            this.scene.anims.create({\r\n                key: 'walk',\r\n                frames: this.scene.anims.generateFrameNumbers('frog-run', { start: 0, end: 11 }),\r\n                frameRate: 20,\r\n                repeat: -1\r\n            });\r\n\r\n\r\n            this.scene.anims.create({\r\n                key: 'idle',\r\n                frames: this.scene.anims.generateFrameNumbers('frog-idle', { start: 0, end: 10 }),\r\n                frameRate: 20\r\n            });\r\n\r\n            this.scene.anims.create({\r\n                key: 'jump',\r\n                frames: [{ key: 'frog-jump', frame: 0 }], // A single frame for the jump animation\r\n                frameRate: 20\r\n            });\r\n\r\n            this.scene.anims.create({\r\n                key: 'fall',\r\n                frames: [{ key: 'frog-fall', frame: 0 }], // A single frame for the fall animation\r\n                frameRate: 20\r\n            });\r\n\r\n        }\r\n\r\n        this.isJumping = false; // Track if the player is jumping\r\n\r\n        const duplicateScale = 2;\r\n        const scaleMobileButton = 3 * duplicateScale;\r\n\r\n        const textureMobileButton = this.scene.textures.get('mobile-button');\r\n\r\n        const imageWidth = textureMobileButton.getSourceImage().width * scaleMobileButton;\r\n        const imageHeight = textureMobileButton.getSourceImage().height * scaleMobileButton;\r\n\r\n        this.leftButton = this.scene.add.image(\r\n            (imageWidth / 2) + 10,\r\n            (this.scene.cameras.main.height - imageHeight / 2) - 10,\r\n            'mobile-button'\r\n        ).setInteractive({\r\n            hitArea: new Phaser.Geom.Rectangle(0, -imageHeight / 2, imageWidth + (14 * duplicateScale), imageHeight), // Increase the width here\r\n            hitAreaCallback: Phaser.Geom.Rectangle.Contains\r\n        });\r\n\r\n        this.rightButton = this.scene.add.image(((imageWidth / 2) + 20 * duplicateScale) + (imageWidth + 5), (this.scene.cameras.main.height - imageHeight / 2) - 10, 'mobile-button').setInteractive({\r\n            hitArea: new Phaser.Geom.Rectangle(((imageWidth / 2)) + (imageWidth) - (14 * duplicateScale), -imageHeight / 2, imageWidth + 10 * duplicateScale, imageHeight), // Increase the width here\r\n            hitAreaCallback: Phaser.Geom.Rectangle.Contains\r\n        });\r\n        this.jumpButton = this.scene.add.image((this.scene.cameras.main.width - imageWidth / 2) - 10, (this.scene.cameras.main.height - imageHeight / 2) - 10, 'mobile-button').setInteractive({\r\n            hitArea: new Phaser.Geom.Rectangle((this.scene.cameras.main.width - imageWidth) - 10 * duplicateScale, -imageHeight / 2, imageWidth + 10 * duplicateScale, imageHeight), // Increase the width here\r\n            hitAreaCallback: Phaser.Geom.Rectangle.Contains\r\n        });\r\n\r\n        this.leftButton.setRotation(-Math.PI / 2);\r\n        this.rightButton.setRotation(Math.PI / 2);\r\n\r\n        // Keep buttons visible on top of other objects\r\n        this.leftButton.setScrollFactor(0);\r\n        this.rightButton.setScrollFactor(0);\r\n        this.jumpButton.setScrollFactor(0);\r\n\r\n        this.leftButton.setScale(scaleMobileButton);\r\n        this.rightButton.setScale(scaleMobileButton);\r\n        this.jumpButton.setScale(scaleMobileButton);\r\n\r\n        this.leftButton.setAlpha(1);\r\n        this.rightButton.setAlpha(1);\r\n        this.jumpButton.setAlpha(1);\r\n\r\n        this.scene.input.addPointer(2);\r\n\r\n        this.scene.input.on('pointerup', () => {\r\n            this.isRightPressed = false;\r\n            this.isJumpPressed = false;\r\n            this.isLeftPressed = false;\r\n\r\n            // Reset the tint when the button is released\r\n            this.leftButton.clearTint();\r\n            this.rightButton.clearTint();\r\n            this.jumpButton.clearTint();\r\n        });\r\n\r\n        this.scene.input.on('pointerdown', this.onPointerDown, this);\r\n        this.scene.input.on('pointerup', this.onPointerUp, this);\r\n        this.scene.input.on('pointermove', this.onPointerMove, this);\r\n        this.scene.input.on('gameout', (pointer) => {\r\n            this.onPointerOut();\r\n        });\r\n        this.scene.input.on('gameover', (pointer) => {\r\n            if (this.gameOut) {\r\n                if (this.scene.input.activePointer.isDown) {\r\n                    this.touches = this.previousTouches;\r\n                }\r\n\r\n                this.isRightPressed = false;\r\n                this.isJumpPressed = false;\r\n                this.isLeftPressed = false;\r\n                this.gameOut = false;\r\n\r\n                // Reset the tint when the button is released\r\n                this.leftButton.clearTint();\r\n                this.rightButton.clearTint();\r\n                this.jumpButton.clearTint();\r\n            } else {\r\n                if (!this.scene.input.activePointer.isDown) {\r\n                    if (this.previousTouches) {\r\n                        this.touches = this.previousTouches;\r\n                    }\r\n                    this.isRightPressed = false;\r\n                    this.isJumpPressed = false;\r\n                    this.isLeftPressed = false;\r\n                    this.gameOut = false;\r\n                    // Reset the tint when the button is released\r\n                    this.leftButton.clearTint();\r\n                    this.rightButton.clearTint();\r\n                    this.jumpButton.clearTint();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setDepth(2);\r\n        this.leftButton.setDepth(3);\r\n        this.rightButton.setDepth(3);\r\n        this.jumpButton.setDepth(3);\r\n    }\r\n\r\n    onPointerOut() {\r\n        // Reset all input states when the pointer moves outside the game area\r\n        this.isRightPressed = false;\r\n        this.isJumpPressed = false;\r\n        this.isLeftPressed = false;\r\n        if (this.isPlayerDied)\r\n            return;\r\n        this.previousTouches = this.touches;\r\n        this.touches = {}; // Clear all active touches\r\n        this.gameOut = true;\r\n        this.setVelocityX(0); // Stop horizontal movement\r\n        this.anims.play('idle', true); // Play idle animation\r\n        // Reset the tint when the button is released\r\n        this.leftButton.clearTint();\r\n        this.rightButton.clearTint();\r\n        this.jumpButton.clearTint();\r\n    }\r\n\r\n    onPointerDown(pointer) {\r\n        this.emptyTouches = false;\r\n        this.touches[pointer.id] = pointer;\r\n    }\r\n\r\n    onPointerUp(pointer) {\r\n        delete this.touches[pointer.id];\r\n    }\r\n\r\n    onPointerMove(pointer) {\r\n        if (this.touches[pointer.id]) {\r\n        }\r\n    }\r\n\r\n    reachedEndOfLevel() {\r\n        this.setVelocityX(0);\r\n        this.anims.play('idle', true); // Play idle animation if player reach end of level\r\n    }\r\n\r\n    handlePointerWalk(pointer) {\r\n        let rightOrLeftPressed = false;\r\n        let calculatedY = this.leftButton.input.hitArea.y;\r\n        // Check if the pointer is within the bounds of the left button\r\n        if (this.leftButton.input.hitArea.contains(pointer.x, calculatedY)) {\r\n            this.isLeftPressed = true;\r\n            this.leftButton.setTint(0xFFFF00);\r\n            rightOrLeftPressed = true;\r\n            this.setVelocityX(-160 * this.speed);\r\n            this.setFlipX(true); // Flip the sprite to face left\r\n            if (this.body.blocked.down) {\r\n                this.anims.play('walk', true);\r\n            }\r\n        } else if (this.isLeftPressed) {\r\n            // Reset left movement if not pressed\r\n            this.isLeftPressed = false;\r\n            // Reset the tint when the button is released\r\n            this.leftButton.clearTint();\r\n            if (this.body.blocked.down) {\r\n                this.setVelocityX(0);\r\n                this.anims.play('idle', true);\r\n            }\r\n        }\r\n\r\n        // Check if the pointer is within the bounds of the right button\r\n        if (this.rightButton.input.hitArea.contains(pointer.x, calculatedY)) {\r\n            this.isRightPressed = true;\r\n            this.rightButton.setTint(0xFFFF00);\r\n            rightOrLeftPressed = true;\r\n            this.setVelocityX(160 * this.speed);\r\n            this.setFlipX(false); // Ensure the sprite faces right\r\n            if (this.body.blocked.down) {\r\n                this.anims.play('walk', true);\r\n            }\r\n        } else if (this.isRightPressed) {\r\n            // Reset right movement if not pressed\r\n            this.isRightPressed = false;\r\n            // Reset the tint when the button is released\r\n            this.rightButton.clearTint();\r\n            if (this.body.blocked.down) {\r\n                this.setVelocityX(0);\r\n                this.anims.play('idle', true);\r\n            }\r\n        }\r\n\r\n        return rightOrLeftPressed;\r\n    }\r\n\r\n    jump(pointer) {\r\n        if (this.scene.hud.isPaused)\r\n            return;\r\n        let calculatedY = this.jumpButton.input.hitArea.y;\r\n        if (this.jumpButton.input.hitArea.contains(pointer.x, calculatedY)) {\r\n            this.isJumpPressed = true;\r\n            this.jumpButton.setTint(0xFFFF00);\r\n            if ((this.body.blocked.down || this.hasCoyoteTime) && !this.isJumping) {\r\n                this.scene.sound.add('jumpSound').play({ volume: 0.2 });\r\n                this.setVelocityY(-450); // Adjust the jump strength here\r\n                this.anims.play('jump'); // Play the jump animation\r\n                this.isJumping = true;\r\n                this.hasCoyoteTime = false; // Disable further coyote jumps after the jump action\r\n            }\r\n        } else if (this.isJumpPressed) {\r\n            // Reset jump pressed if not within bounds\r\n            this.isJumpPressed = false;\r\n            this.jumpButton.clearTint();\r\n        }\r\n    }\r\n\r\n    handleActiveTouches() {\r\n        // Iterate through each active touch\r\n        let rightOrLeftPressed = false;\r\n        for (const id in this.touches) {\r\n            const touch = this.touches[id];\r\n\r\n            if (!rightOrLeftPressed) {\r\n                if (this.handlePointerWalk(touch)) {\r\n                    rightOrLeftPressed = true;\r\n                } else {\r\n                    this.jump(touch);\r\n                }\r\n            } else {\r\n                this.jump(touch);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleInput() {\r\n        if (this.isPlayerDied) {\r\n            this.setVelocityX(0);\r\n            this.setVelocityY(0);\r\n            return;\r\n        }\r\n\r\n        this.updateCoyoteTime(); // Call this each frame to update coyote time state\r\n\r\n        // Handle left movement for both keyboard and mobile input\r\n        if (this.scene.cursors.left.isDown || this.scene.keys.A.isDown || this.isLeftPressed) {\r\n            this.setVelocityX(-160 * this.speed);\r\n            if (this.body.blocked.down && !this.isJumping) { // Only play walk animation if on the ground\r\n                this.anims.play('walk', true);\r\n            }\r\n            this.setFlipX(true); // Flip the sprite to face left\r\n        }\r\n        // Handle right movement for both keyboard and mobile input\r\n        else if (this.scene.cursors.right.isDown || this.scene.keys.D.isDown || this.isRightPressed) {\r\n            this.setVelocityX(160 * this.speed);\r\n            if (this.body.blocked.down && !this.isJumping) { // Only play walk animation if on the ground\r\n                this.anims.play('walk', true);\r\n            }\r\n            this.setFlipX(false); // Ensure the sprite faces right\r\n        }\r\n        // No horizontal movement\r\n        else {\r\n            this.setVelocityX(0);\r\n            if (this.body.blocked.down && !this.isJumping) {\r\n                this.anims.play('idle', true); // Play idle animation when on the ground\r\n            }\r\n        }\r\n\r\n        // Handle jumping with W key, Spacebar, or a custom mobile jump button if added later\r\n        if ((this.scene.cursors.up.isDown || this.scene.keys.W.isDown || this.scene.keys.SPACE.isDown || this.isJumpPressed) && !this.isJumping) {\r\n            // Check coyote time and jump if conditions are met\r\n            if ((this.body.blocked.down || this.hasCoyoteTime) && !this.isJumping) {\r\n                if (this.scene.hud.isPaused)\r\n                    return;\r\n                this.scene.sound.add('jumpSound').play({ volume: 0.2 });\r\n                this.setVelocityY(-450); // Adjust the jump strength here\r\n                this.anims.play('jump'); // Play the jump animation\r\n                this.isJumping = true;\r\n                this.hasCoyoteTime = false; // Disable further coyote jumps after the jump action\r\n                this.isJumpPressed = false;\r\n            }\r\n        }\r\n\r\n        // Check if the player is falling (velocityY > 0 and not on the ground)\r\n        if (this.body.velocity.y > 0 && !this.body.blocked.down) {\r\n\r\n            this.anims.play('fall', true); // Play fall animation when falling\r\n        }\r\n\r\n        this.handleActiveTouches();\r\n        // Reset jump when touching the ground\r\n        if (this.body.blocked.down) {\r\n            this.isJumping = false;\r\n            this.isJumpPressed = false;\r\n            this.jumpButton.clearTint();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/player/Player.js?");

/***/ }),

/***/ "./src/scenes/Level1.js":
/*!******************************!*\
  !*** ./src/scenes/Level1.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level1)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n // Make sure this path is correct\r\n\r\n\r\n\r\n\r\nclass Level1 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level1\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 40 * 2, 400 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, (64 * 4 + 8) * 2, (64 * 2 - 16) * 2, 'end-idle', this.player, \"Level2\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, 3, this.endLevel);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.player, \"level1map\");\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(265 * 2, 305 * 2);\r\n        this.collectables.addApple(200 * 2, 180 * 2);\r\n        this.collectables.addApple(180 * 2, 418 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level1.js?");

/***/ }),

/***/ "./src/scenes/Level10.js":
/*!*******************************!*\
  !*** ./src/scenes/Level10.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level10)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level10 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level10\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 289, 754, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 255 * 2, (8 * 4) * 2, 'end-idle', this.player, \"Level11\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel, 3);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(288, 511);\r\n        this.collectables.addApple(440, 223);\r\n        this.collectables.addApple(30, 156);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.traps.addSpike(20 * 2, 832);\r\n        this.traps.addSpike(54 * 2, 832);\r\n        this.traps.addSpike((54 + 34) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 2) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 3) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 4) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 5) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 6) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 7) * 2, 832);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.enemies.addEnemy(160, 666, 0, 0);\r\n        this.enemies.addEnemy(543, 578, 0, 0);\r\n        this.enemies.addEnemy(285, 373, 0, 0);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level10map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level10.js?");

/***/ }),

/***/ "./src/scenes/Level11.js":
/*!*******************************!*\
  !*** ./src/scenes/Level11.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level11)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level11 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level11\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 87, 754, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 255 * 2, 288, 'end-idle', this.player, \"Level12\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel, 3);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(490, 698);\r\n        this.collectables.addApple(30, 646);\r\n        this.collectables.addApple(217, 301);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.enemies.addEnemy(160, 835, 50, 50);\r\n        this.enemies.addEnemy(404, 835, 50, 50);\r\n        this.enemies.addEnemy(285, 835, 50, 50);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level11map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level11.js?");

/***/ }),

/***/ "./src/scenes/Level12.js":
/*!*******************************!*\
  !*** ./src/scenes/Level12.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level12)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level12 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level12\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 87, 754, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 264 * 2, 288, 'end-idle', this.player, \"Level13\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(527, 611);\r\n        this.collectables.addApple(531, 306);\r\n        this.collectables.addApple(217, 301);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level12map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level12.js?");

/***/ }),

/***/ "./src/scenes/Level13.js":
/*!*******************************!*\
  !*** ./src/scenes/Level13.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level13)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level13 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level13\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 87, 837, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 512, 65, 'end-idle', this.player, \"Level14\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel, 5);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(559, 476);\r\n        this.collectables.addApple(17, 346);\r\n        this.collectables.addApple(557, 694);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.enemies.addEnemy(31, 742, 400, 250);\r\n        this.enemies.addEnemy(129, 613, 400, 250);\r\n        this.enemies.addEnemy(30, 482, 400, 250);\r\n        this.enemies.addEnemy(129, 354, 400, 250);\r\n        this.enemies.addEnemy(27, 226, 400, 250);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level13map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level13.js?");

/***/ }),

/***/ "./src/scenes/Level14.js":
/*!*******************************!*\
  !*** ./src/scenes/Level14.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level14)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level14 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level14\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 543, 829, 'frog', true);\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 70, 65, 'end-idle', this.player, \"Level15\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(279, 83);\r\n        this.collectables.addApple(549, 282);\r\n        this.collectables.addApple(557, 694);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.traps.addSpike(20 * 2, 832);\r\n        this.traps.addSpike(54 * 2, 832);\r\n        this.traps.addSpike((54 + 34) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 2) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 3) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 4) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 5) * 2, 832);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level14map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level14.js?");

/***/ }),

/***/ "./src/scenes/Level15.js":
/*!*******************************!*\
  !*** ./src/scenes/Level15.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level15)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level15 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level15\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 523, 717, 'frog', true);\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 70, 32, 'end-idle', this.player, \"MainMenu\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 8, this.endLevel);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(369, 623);\r\n        this.collectables.addApple(202, 525);\r\n        this.collectables.addApple(49, 434);\r\n        this.collectables.addApple(206, 325);\r\n        this.collectables.addApple(370, 236);\r\n        this.collectables.addApple(523, 130);\r\n        this.collectables.addApple(340, 41);\r\n        this.collectables.addApple(218, 41);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.traps.addSpike(20 * 2, 832);\r\n        this.traps.addSpike(54 * 2, 832);\r\n        this.traps.addSpike((54 + 34) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 2) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 3) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 4) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 5) * 2, 832);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level15map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level15.js?");

/***/ }),

/***/ "./src/scenes/Level2.js":
/*!******************************!*\
  !*** ./src/scenes/Level2.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level2)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n // Make sure this path is correct\r\n\r\n\r\n\r\n\r\nclass Level2 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level2\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 40 * 2, 400 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 32 * 2, (64 * 4) * 2, 'end-idle', this.player, \"Level3\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, 3, this.endLevel);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.player, \"level2map\");\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(265 * 2, 305 * 2);\r\n        this.collectables.addApple(180 * 2, 418 * 2);\r\n        this.collectables.addApple(100 * 2, 220 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player);\r\n        this.traps.addSpike(100 * 2, 416 * 2);\r\n        this.traps.addSpike(100 * 2, 272 * 2);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level2.js?");

/***/ }),

/***/ "./src/scenes/Level3.js":
/*!******************************!*\
  !*** ./src/scenes/Level3.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level3)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n // Make sure this path is correct\r\n\r\n\r\n\r\n\r\nclass Level3 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level3\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 40 * 2, 64 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 32 * 2, (100 * 4) * 2, 'end-idle', this.player, \"Level4\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, 3, this.endLevel);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.player, \"level3map\");\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(260 * 2, 50 * 2);\r\n        this.collectables.addApple(265 * 2, 180 * 2);\r\n        this.collectables.addApple(90 * 2, 280 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player);\r\n        this.traps.addSpike(120 * 2, 192 * 2);\r\n        this.traps.addSpike(270 * 2, 416 * 2);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level3.js?");

/***/ }),

/***/ "./src/scenes/Level4.js":
/*!******************************!*\
  !*** ./src/scenes/Level4.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level4)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n // Make sure this path is correct\r\n\r\n\r\n\r\n\r\nclass Level4 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level4\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 40 * 2, 200 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 32 * 2, (100 * 4) * 2, 'end-idle', this.player, \"Level5\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel, 1);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(120 * 2, 160 * 2);\r\n        this.collectables.addApple(270 * 2, 380 * 2);\r\n        this.collectables.addApple(272 * 2, 250 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.traps.addSpike(200 * 2, 208 * 2);\r\n        this.traps.addSpike(274 * 2, 350 * 2, -Math.PI / 2);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.enemies.addEnemy(170 * 2, 400 * 2);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level4map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        this.enemies.update();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level4.js?");

/***/ }),

/***/ "./src/scenes/Level5.js":
/*!******************************!*\
  !*** ./src/scenes/Level5.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level5)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n // Make sure this path is correct\r\n\r\n\r\n\r\n\r\nclass Level5 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level5\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 255 * 2, 400 * 2, 'frog', true);\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 232 * 2, (16 * 4) * 2, 'end-idle', this.player, \"Level6\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel, 2);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(10 * 2, 380 * 2);\r\n        this.collectables.addApple(272 * 2, 250 * 2);\r\n        this.collectables.addApple(10 * 2, 210 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.traps.addSpike(215 * 2, 256 * 2);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.enemies.addEnemy(15 * 2, 400 * 2, 100);\r\n        this.enemies.addEnemy(115 * 2, 400 * 2, 100);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level5map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        this.enemies.update();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level5.js?");

/***/ }),

/***/ "./src/scenes/Level6.js":
/*!******************************!*\
  !*** ./src/scenes/Level6.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level6)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level6 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level6\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 150 * 2, 50 * 2, 'frog', true);\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 72 * 2, (100 * 4) * 2, 'end-idle', this.player, \"Level7\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, 3, this.endLevel);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(100 * 2, 100 * 2);\r\n        this.collectables.addApple(200 * 2, 100 * 2);\r\n        this.collectables.addApple(100 * 2, 300 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player);\r\n        this.traps.addSpike(215 * 2, 305 * 2);\r\n        this.traps.addSpike(112 * 2, 320 * 2, -Math.PI / 2);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.player, \"level6map\");\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level6.js?");

/***/ }),

/***/ "./src/scenes/Level7.js":
/*!******************************!*\
  !*** ./src/scenes/Level7.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level7)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level7 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level7\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 40 * 2, 410 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 260 * 2, (12 * 4) * 2, 'end-idle', this.player, \"Level8\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel, 2);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(100 * 2, 190 * 2);\r\n        this.collectables.addApple(260 * 2, 140 * 2);\r\n        this.collectables.addApple(240 * 2, 280 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.enemies.addEnemy(10 * 2, 340 * 2, 200 * 2, 150);\r\n        this.enemies.addEnemy(115 * 2, 50 * 2, 100);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level7map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level7.js?");

/***/ }),

/***/ "./src/scenes/Level8.js":
/*!******************************!*\
  !*** ./src/scenes/Level8.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level8)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level8 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level8\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 40 * 2, 170 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 260 * 2, (100 * 4) * 2, 'end-idle', this.player, \"Level9\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel, 2);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(50 * 2, 50 * 2);\r\n        this.collectables.addApple(275 * 2, 280 * 2);\r\n        this.collectables.addApple(20 * 2, 340 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.traps.addSpike(140, 320, (Math.PI / 2) * 2);\r\n        this.traps.addSpike(180, 832);\r\n        this.traps.addSpike(350, 832, Math.PI / 2);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.enemies.addEnemy(10 * 2, 340 * 2, 50 * 2, 150);\r\n        this.enemies.addEnemy(115 * 2, 50 * 2, 150, 250);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level8map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level8.js?");

/***/ }),

/***/ "./src/scenes/Level9.js":
/*!******************************!*\
  !*** ./src/scenes/Level9.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Level9)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enemies/Enemies.js */ \"./src/enemies/Enemies.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n/* harmony import */ var _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LevelScene.js */ \"./src/scenes/LevelScene.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Level9 extends _LevelScene_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] {\r\n    constructor() {\r\n        super(\"Level9\");\r\n    }\r\n\r\n    preload() { }\r\n\r\n    create() {\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, 50 * 2, 380 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 265 * 2, (4 * 4) * 2, 'end-idle', this.player, \"Level10\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 3, this.endLevel);\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(515, 177);\r\n        this.collectables.addApple(528, 447);\r\n        this.collectables.addApple(55, 620);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this.player);\r\n        this.traps.addSpike(20 * 2, 832);\r\n        this.traps.addSpike(54 * 2, 832);\r\n        this.traps.addSpike((54 + 34) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 2) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 3) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 4) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 5) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 6) * 2, 832);\r\n        this.traps.addSpike((54 + 34 * 7) * 2, 832);\r\n        this.enemies = new _enemies_Enemies_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, this.player, this.hud);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player, \"level9map\", this.enemies.enemies);\r\n        super.create();\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.enemies.enemies.length > 0) {\r\n            this.enemies.update();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/Level9.js?");

/***/ }),

/***/ "./src/scenes/LevelScene.js":
/*!**********************************!*\
  !*** ./src/scenes/LevelScene.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LevelScene)\n/* harmony export */ });\nclass LevelScene extends Phaser.Scene {\r\n    constructor(sceneName) {\r\n        super({\r\n            key: sceneName,\r\n            physics: {\r\n                default: 'arcade',\r\n                arcade: {\r\n                    gravity: { y: 600 },\r\n                    debug: false\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    create() {\r\n        // Disable player physics and hide the player initially\r\n        this.player.setVisible(false);\r\n        this.player.isPlayerDied = true;\r\n        this.fadeRect = this.add.rectangle(0, 0, this.cameras.main.width, this.cameras.main.height, 0x000000);\r\n        this.fadeRect.setOrigin(0, 0);\r\n        this.fadeRect.setDepth(1000); // Ensure the rectangle is on top\r\n        this.input.on('pointerdown', (pointer) => {\r\n            const x = pointer.worldX; // X coordinate in the game world\r\n            const y = pointer.worldY; // Y coordinate in the game world\r\n\r\n            //Get pointer position based in the mouse click\r\n            //console.log(`${Math.floor(x)}, ${Math.floor(y)}`);\r\n        });\r\n        this.player.create();\r\n        this.tilemap.create();\r\n        this.hud.create();\r\n        this.endLevel.create();\r\n        this.traps.create();\r\n        this.collectables.create();\r\n        if (this.enemies) {\r\n            this.enemies.create();\r\n        }\r\n\r\n        this.time.delayedCall(500, () => {\r\n            this.player.setVisible(true);\r\n            // Add a delay before playing the sound (e.g., 300ms)\r\n            this.time.delayedCall(300, () => {\r\n                this.sound.add('teleport').play({ volume: 0.5 });\r\n            });\r\n            // Play the appearing animation\r\n            this.player.anims.play('appear'); // Assuming you have this animation created\r\n\r\n            // When the appearing animation completes\r\n            this.player.on('animationcomplete-appear', () => {\r\n                this.player.isPlayerDied = false;\r\n                // Show the player sprite again\r\n                this.player.setVisible(true);\r\n                this.player.body.enable = true;\r\n                this.player.setFlipX(this.player.flipped);\r\n            });\r\n        });\r\n\r\n        // Start the fade-in effect\r\n        this.tweens.add({\r\n            targets: this.fadeRect,\r\n            alpha: 0,\r\n            duration: 250,\r\n            onComplete: () => {\r\n                this.fadeRect.destroy(); // Remove the rectangle after the fade-in\r\n            }\r\n        });\r\n    }\r\n\r\n    update() {\r\n        if (!this.endLevel.triggerEndLevel) {\r\n            // Delegate the player movement logic to the player class\r\n            this.player.handleInput();\r\n        } else {\r\n            this.player.reachedEndOfLevel();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/LevelScene.js?");

/***/ }),

/***/ "./src/scenes/LevelSelection.js":
/*!**************************************!*\
  !*** ./src/scenes/LevelSelection.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LevelSelection)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n\r\n\r\n\r\n // Make sure this path is correct\r\n\r\n\r\n\r\nclass LevelSelection extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: \"LevelSelection\",\r\n            physics: {\r\n                default: 'arcade',\r\n                arcade: {\r\n                    gravity: { y: 600 },\r\n                    debug: false\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    create() {\r\n        this.overlay = this.add.graphics();\r\n        this.overlay.fillStyle(0x000000, 0.5); // Black color with 50% opacity\r\n        this.overlay.fillRect(0, 0, this.cameras.main.width, this.cameras.main.height);\r\n        this.overlay.setDepth(2000);\r\n\r\n        const rows = 3;         // Number of rows\r\n        const cols = 5;         // Number of columns\r\n        const buttonWidth = 100; // Width of each button\r\n        const buttonHeight = 100; // Height of each button\r\n        const spacing = 10;      // Spacing between buttons\r\n\r\n        // Calculate starting positions\r\n        const startX = 50 + (this.cameras.main.width - (cols * buttonWidth + (cols - 1) * spacing)) / 2; // Center horizontally\r\n        const startY = (this.cameras.main.height - (rows * buttonHeight + (rows - 1) * spacing)) / 2; // Center vertically\r\n\r\n        const lastLevel = localStorage.getItem('lastLevel') ? parseInt(localStorage.getItem('lastLevel')) : 1; // Default to level 1 if not set\r\n\r\n        for (let i = 0; i < rows; i++) {\r\n            for (let j = 0; j < cols; j++) {\r\n                const levelIndex = i * cols + j + 1; // Calculate the level number (1-15)\r\n                if (levelIndex > 15) break; // Avoid creating more than 15 levels\r\n\r\n                let levelNum = levelIndex < 10 ? `0${levelIndex}` : `${levelIndex}`;\r\n\r\n                // Create a button using an image\r\n                const levelButton = this.add.sprite(\r\n                    startX + j * (buttonWidth + spacing),\r\n                    startY + i * (buttonHeight + spacing),\r\n                    `levelselection-${levelNum.toString()}`\r\n                ).setInteractive(); // Make it interactive\r\n\r\n                // Check if this level is accessible\r\n                if (levelIndex <= lastLevel) {\r\n                    // Accessible level\r\n                    levelButton.on('pointerdown', () => {\r\n                        this.scene.start(\"Level\" + levelNum.replace(/^0+/, ''));\r\n                    });\r\n\r\n                    levelButton.on('pointerover', () => {\r\n                        levelButton.setAlpha(0.8); // Change opacity on hover\r\n                    });\r\n\r\n                    levelButton.on('pointerout', () => {\r\n                        levelButton.setAlpha(1); // Restore opacity when not hovering\r\n                    });\r\n                } else {\r\n                    // Inaccessible level\r\n                    levelButton.setTint(0x808080); // Paint gray for inaccessible levels\r\n                    levelButton.setAlpha(0.5); // Lower opacity\r\n                    levelButton.setInteractive(false); // Disable interaction\r\n                }\r\n\r\n                levelButton.setScale(4);\r\n                levelButton.setDepth(2001);\r\n            }\r\n        }\r\n\r\n\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 40 * 2, 64 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 32 * 2, (100 * 4) * 2, 'end-idle', this.player, \"Level4\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, 3, this.endLevel);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.player, \"level3map\");\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(260 * 2, 50 * 2);\r\n        this.collectables.addApple(265 * 2, 180 * 2);\r\n        this.collectables.addApple(90 * 2, 280 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player);\r\n        this.traps.addSpike(120 * 2, 192 * 2);\r\n        this.traps.addSpike(270 * 2, 416 * 2);\r\n\r\n\r\n        // Disable player physics and hide the player initially\r\n        this.player.setVisible(true);\r\n        this.player.isPlayerDied = true;\r\n        this.fadeRect = this.add.rectangle(0, 0, this.cameras.main.width, this.cameras.main.height, 0x000000);\r\n        this.fadeRect.setOrigin(0, 0);\r\n        this.fadeRect.setDepth(1000); // Ensure the rectangle is on top\r\n        this.input.on('pointerdown', (pointer) => {\r\n            const x = pointer.worldX; // X coordinate in the game world\r\n            const y = pointer.worldY; // Y coordinate in the game world\r\n\r\n            //Get pointer position based in the mouse click\r\n            //console.log(`${Math.floor(x)}, ${Math.floor(y)}`);\r\n        });\r\n        this.player.create();\r\n        this.tilemap.create();\r\n        this.hud.create();\r\n        this.endLevel.create();\r\n        this.traps.create();\r\n        this.collectables.create();\r\n        if (this.enemies) {\r\n            this.enemies.create();\r\n        }\r\n\r\n        this.player.isPlayerDied = false;\r\n        // Show the player sprite again\r\n        this.player.setVisible(true);\r\n        this.player.body.enable = true;\r\n        this.player.setFlipX(this.player.flipped);\r\n\r\n\r\n        // Start the fade-in effect\r\n        this.tweens.add({\r\n            targets: this.fadeRect,\r\n            alpha: 0,\r\n            duration: 250,\r\n            onComplete: () => {\r\n                this.fadeRect.destroy(); // Remove the rectangle after the fade-in\r\n            }\r\n        });\r\n    }\r\n\r\n    update() {\r\n        //super.update();\r\n        this.player.anims.play('idle', true);\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/LevelSelection.js?");

/***/ }),

/***/ "./src/scenes/LoadingScene.js":
/*!************************************!*\
  !*** ./src/scenes/LoadingScene.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LoadingScene)\n/* harmony export */ });\nclass LoadingScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: \"LoadingScene\"\r\n        })\r\n    }\r\n\r\n    preload() {\r\n        this.load.image('settingsBtn', 'images/PixelAdventure1/Buttons/Settings.png');\r\n        this.load.image('playBtn', 'images/PixelAdventure1/Buttons/Play.png');\r\n        this.load.image('restartBtn', 'images/PixelAdventure1/Buttons/Restart.png');\r\n        this.load.image('backBtn', 'images/PixelAdventure1/Buttons/Back.png');\r\n        this.load.audio('jumpSound', 'sounds/jump.wav');\r\n        this.load.audio('apple-collected', 'sounds/applecollected.wav');\r\n        this.load.audio('endlevel-unlocked', 'sounds/endlevelunlocked.wav');\r\n        this.load.audio('teleport', 'sounds/teleport.wav');\r\n        this.load.audio('player-death', 'sounds/playerdeath.mp3');\r\n        this.load.audio('hitenemy', 'sounds/hitenemy.wav');\r\n        this.load.audio('winlevel', 'sounds/winlevel.wav');\r\n\r\n        for (let i = 1; i <= 15; i++) {\r\n            let levelnum = i.toString();\r\n            if (i < 10) {\r\n                levelnum = \"0\" + i.toString();\r\n            }\r\n            this.load.image(`levelselection-${levelnum.toString()}`, `images/PixelAdventure1/Menu/Levels/${levelnum.toString()}.png`);\r\n        }\r\n\r\n        this.load.image(\"game-thumbnail\", \"images/Thumbnail.png\");\r\n        const screenWidth = this.sys.canvas.width;\r\n        const screenHeight = this.sys.canvas.height;\r\n        const barWidth = screenWidth * 0.8;\r\n        const barHeight = 20;\r\n        const barX = (screenWidth - barWidth) / 2;\r\n        const barY = screenHeight / 2 - barHeight / 2;\r\n\r\n        const loadingBar = this.add.graphics();\r\n        const outlineBar = this.add.graphics();\r\n        outlineBar.lineStyle(2, 0xffffff, 1);  // Outline color and thickness\r\n        outlineBar.strokeRect(barX, barY, barWidth, barHeight);\r\n\r\n        this.load.once('filecomplete-image-game-thumbnail', () => {\r\n            // Add the game thumbnail once it's loaded\r\n            this.thumbnail = this.add.image(screenWidth / 2, barY - 120, \"game-thumbnail\").setScale(2);\r\n        });\r\n\r\n        this.load.on('progress', (percentage) => {\r\n            loadingBar.fillStyle(0xffffff, 1);\r\n            loadingBar.fillRect(barX, barY, barWidth * percentage, barHeight);\r\n        });\r\n\r\n        this.load.on('complete', () => {\r\n            loadingBar.destroy();\r\n            outlineBar.destroy();\r\n            if (this.thumbnail) this.thumbnail.destroy();\r\n            this.scene.start(\"MainMenu\");\r\n        });\r\n\r\n        this.load.image('mobile-button', 'images/mobile-button.png');\r\n\r\n        this.load.spritesheet(\"frog-run\", \"images/PixelAdventure1/Main Characters/Ninja Frog/Run (32x32).png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32\r\n        });\r\n        this.load.spritesheet(\"frog-idle\", \"images/PixelAdventure1/Main Characters/Ninja Frog/Idle (32x32).png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32\r\n        });\r\n        this.load.spritesheet(\"frog-jump\", \"images/PixelAdventure1/Main Characters/Ninja Frog/Jump (32x32).png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32\r\n        });\r\n        this.load.spritesheet(\"frog-fall\", \"images/PixelAdventure1/Main Characters/Ninja Frog/Fall (32x32).png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32\r\n        });\r\n        this.load.spritesheet(\"apple-idle\", \"images/PixelAdventure1/Items/Fruits/Apple.png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32\r\n        });\r\n\r\n        this.load.image(\"tiles\", \"images/PixelAdventure1/Terrain/Terrain (16x16).png\");\r\n        this.load.image(\"tiles-background-blue\", \"images/PixelAdventure1/Background/Blue.png\");\r\n        this.load.image(\"end-idle\", \"images/PixelAdventure1/Items/Checkpoints/End/End (Idle).png\");\r\n        this.load.spritesheet('confetti', 'images/PixelAdventure1/Other/Confetti (16x16).png', {\r\n            frameWidth: 16,\r\n            frameHeight: 16\r\n        });\r\n\r\n        this.load.spritesheet(\"end-pressed\", \"images/PixelAdventure1/Items/Checkpoints/End/End (Pressed) (64x64).png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64\r\n        });\r\n        this.load.image(\"spike\", \"images/PixelAdventure1/Traps/Spikes/Idle.png\");\r\n        this.load.image(\"logo\", \"images/Logo.png\");\r\n\r\n        this.load.tilemapTiledJSON(\"level1map\", \"assets/levels/level1/level1map.json\");\r\n        this.load.tilemapTiledJSON(\"level2map\", \"assets/levels/level2/level2map.json\");\r\n        this.load.tilemapTiledJSON(\"level3map\", \"assets/levels/level3/level3map.json\");\r\n        this.load.tilemapTiledJSON(\"level4map\", \"assets/levels/level4/level4map.json\");\r\n        this.load.tilemapTiledJSON(\"level5map\", \"assets/levels/level5/level5map.json\");\r\n        this.load.tilemapTiledJSON(\"level6map\", \"assets/levels/level6/level6map.json\");\r\n        this.load.tilemapTiledJSON(\"level7map\", \"assets/levels/level7/level7map.json\");\r\n        this.load.tilemapTiledJSON(\"level8map\", \"assets/levels/level8/level8map.json\");\r\n        this.load.tilemapTiledJSON(\"level9map\", \"assets/levels/level9/level9map.json\");\r\n        this.load.tilemapTiledJSON(\"level10map\", \"assets/levels/level10/level10map.json\");\r\n        this.load.tilemapTiledJSON(\"level11map\", \"assets/levels/level11/level11map.json\");\r\n        this.load.tilemapTiledJSON(\"level12map\", \"assets/levels/level12/level12map.json\");\r\n        this.load.tilemapTiledJSON(\"level13map\", \"assets/levels/level13/level13map.json\");\r\n        this.load.tilemapTiledJSON(\"level14map\", \"assets/levels/level14/level14map.json\");\r\n        this.load.tilemapTiledJSON(\"level15map\", \"assets/levels/level15/level15map.json\");\r\n\r\n        this.load.spritesheet(\"player-desappearing\", \"images/PixelAdventure1/Main Characters/Desappearing (96x96).png\", {\r\n            frameWidth: 96,\r\n            frameHeight: 96\r\n        });\r\n        this.load.spritesheet(\"player-appearing\", \"images/PixelAdventure1/Main Characters/Appearing (96x96).png\", {\r\n            frameWidth: 96,\r\n            frameHeight: 96\r\n        });\r\n        this.load.spritesheet(\"enemy-mushroom-idle\", \"images/PixelAdventure1/Enemies/Mushroom/Idle (32x32).png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32\r\n        });\r\n        this.load.spritesheet(\"enemy-mushroom-run\", \"images/PixelAdventure1/Enemies/Mushroom/Run (32x32).png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32\r\n        });\r\n        this.load.spritesheet(\"enemy-mushroom-hit\", \"images/PixelAdventure1/Enemies/Mushroom/Hit.png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32\r\n        });\r\n    }\r\n\r\n    create() {\r\n        // Define death animation\r\n        this.anims.create({\r\n            key: 'death', // Animation key\r\n            frames: this.anims.generateFrameNumbers('player-desappearing', {\r\n                start: 0,\r\n                end: 6  // 0 to 6 frames\r\n            }),\r\n            frameRate: 10, // Adjust speed if necessary\r\n            hideOnComplete: true  // Hide sprite when animation ends\r\n        });\r\n        // Define appear animation\r\n        this.anims.create({\r\n            key: 'appear', // Animation key for appearing\r\n            frames: this.anims.generateFrameNumbers('player-appearing', {\r\n                start: 0,\r\n                end: 6  // Adjust as per your spritesheet frames\r\n            }),\r\n            frameRate: 10, // Adjust speed if necessary\r\n            hideOnComplete: false  // Keep visible when animation ends\r\n        });\r\n        this.anims.create({\r\n            key: 'apple-idle',\r\n            frames: this.anims.generateFrameNumbers('apple-idle', { start: 0, end: 16 }),\r\n            frameRate: 20,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'enemy-mushroom-idle',\r\n            frames: this.anims.generateFrameNumbers('enemy-mushroom-idle', { start: 0, end: 13 }),\r\n            frameRate: 20,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'enemy-mushroom-run',\r\n            frames: this.anims.generateFrameNumbers('enemy-mushroom-run', { start: 0, end: 15 }),\r\n            frameRate: 20,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'enemy-mushroom-hit',\r\n            frames: this.anims.generateFrameNumbers('enemy-mushroom-hit', { start: 0, end: 0 }),\r\n            frameRate: 20\r\n        });\r\n\r\n    }\r\n\r\n    update() {\r\n\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/LoadingScene.js?");

/***/ }),

/***/ "./src/scenes/MainMenu.js":
/*!********************************!*\
  !*** ./src/scenes/MainMenu.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MainMenu)\n/* harmony export */ });\n/* harmony import */ var _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collectables/Collectables.js */ \"./src/collectables/Collectables.js\");\n/* harmony import */ var _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../endlevel/EndLevel.js */ \"./src/endlevel/EndLevel.js\");\n/* harmony import */ var _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hud/HUD.js */ \"./src/hud/HUD.js\");\n/* harmony import */ var _player_Player_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player/Player.js */ \"./src/player/Player.js\");\n/* harmony import */ var _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tilemap/Tilemap.js */ \"./src/tilemap/Tilemap.js\");\n/* harmony import */ var _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../traps/Traps.js */ \"./src/traps/Traps.js\");\n\r\n\r\n\r\n // Make sure this path is correct\r\n\r\n\r\n\r\nclass MainMenu extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: \"MainMenu\",\r\n            physics: {\r\n                default: 'arcade',\r\n                arcade: {\r\n                    gravity: { y: 600 },\r\n                    debug: false\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    create() {\r\n        const versionText = this.add.text(this.sys.canvas.width, this.sys.canvas.height, \"V1.0\", {\r\n            fontSize: '24px',      // Font size\r\n            fill: '#ffffff'        // Text color\r\n        }).setOrigin(1, 1);\r\n        versionText.setShadow(2.5, 3, '#000000', false, true);\r\n        versionText.setDepth(2001);\r\n\r\n        const madeByText = this.add.text(0, this.sys.canvas.height, \"SchaukoskiEntertainment\", {\r\n            fontSize: '24px',      // Font size\r\n            fill: '#ffffff'        // Text color\r\n        }).setOrigin(0, 1);\r\n        madeByText.setShadow(2.5, 3, '#000000', false, true);\r\n        madeByText.setDepth(2001);\r\n\r\n        const logo = this.add.image(this.sys.canvas.width / 2, this.sys.canvas.height / 2.5, \"logo\");\r\n        logo.setDepth(2001);\r\n\r\n        const playText = this.add.text(this.sys.canvas.width / 2, this.sys.canvas.height / 1.8, \"Play\", {\r\n            fontSize: '64px',      // Font size\r\n            fill: '#ffffff'        // Text color\r\n        }).setOrigin(0.5, 0.5);\r\n\r\n        // Add pointer event to playText\r\n        playText.setInteractive(); // Make the text interactive\r\n        playText.on('pointerdown', () => {\r\n            this.scene.start('LevelSelection'); // Transition to LevelSelection scene\r\n        });\r\n\r\n        playText.setShadow(2.5, 3, '#000000', false, true); // Offset x, Offset y, Shadow color, Shadow fill, Shadow stroke\r\n        playText.setDepth(2001);\r\n\r\n        this.overlay = this.add.graphics();\r\n        this.overlay.fillStyle(0x000000, 0.5); // Black color with 50% opacity\r\n        this.overlay.fillRect(0, 0, this.cameras.main.width, this.cameras.main.height);\r\n        this.overlay.setDepth(2000);\r\n\r\n        this.player = new _player_Player_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 40 * 2, 64 * 2, 'frog');\r\n        this.endLevel = new _endlevel_EndLevel_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, 32 * 2, (100 * 4) * 2, 'end-idle', this.player, \"Level4\");\r\n        this.hud = new _hud_HUD_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, 3, this.endLevel);\r\n        this.tilemap = new _tilemap_Tilemap_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.player, \"level3map\");\r\n        this.collectables = new _collectables_Collectables_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.hud);\r\n        this.collectables.addApple(260 * 2, 50 * 2);\r\n        this.collectables.addApple(265 * 2, 180 * 2);\r\n        this.collectables.addApple(90 * 2, 280 * 2);\r\n        this.traps = new _traps_Traps_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this.player);\r\n        this.traps.addSpike(120 * 2, 192 * 2);\r\n        this.traps.addSpike(270 * 2, 416 * 2);\r\n\r\n\r\n        // Disable player physics and hide the player initially\r\n        this.player.setVisible(true);\r\n        this.player.isPlayerDied = true;\r\n        this.fadeRect = this.add.rectangle(0, 0, this.cameras.main.width, this.cameras.main.height, 0x000000);\r\n        this.fadeRect.setOrigin(0, 0);\r\n        this.fadeRect.setDepth(1000); // Ensure the rectangle is on top\r\n        this.input.on('pointerdown', (pointer) => {\r\n            const x = pointer.worldX; // X coordinate in the game world\r\n            const y = pointer.worldY; // Y coordinate in the game world\r\n\r\n            //Get pointer position based in the mouse click\r\n            //console.log(`${Math.floor(x)}, ${Math.floor(y)}`);\r\n        });\r\n        this.player.create();\r\n        this.tilemap.create();\r\n        this.hud.create();\r\n        this.endLevel.create();\r\n        this.traps.create();\r\n        this.collectables.create();\r\n        if (this.enemies) {\r\n            this.enemies.create();\r\n        }\r\n\r\n        this.player.isPlayerDied = false;\r\n        // Show the player sprite again\r\n        this.player.setVisible(true);\r\n        this.player.body.enable = true;\r\n        this.player.setFlipX(this.player.flipped);\r\n\r\n\r\n        // Start the fade-in effect\r\n        this.tweens.add({\r\n            targets: this.fadeRect,\r\n            alpha: 0,\r\n            duration: 250,\r\n            onComplete: () => {\r\n                this.fadeRect.destroy(); // Remove the rectangle after the fade-in\r\n            }\r\n        });\r\n    }\r\n\r\n    update() {\r\n        //super.update();\r\n        this.player.anims.play('idle', true);\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/scenes/MainMenu.js?");

/***/ }),

/***/ "./src/tilemap/Tilemap.js":
/*!********************************!*\
  !*** ./src/tilemap/Tilemap.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tilemap)\n/* harmony export */ });\nclass Tilemap {\r\n    constructor(scene, player, tilemapKey, enemies = []) {\r\n        this.scene = scene;\r\n        this.player = player;\r\n        this.tilemapKey = tilemapKey;\r\n        this.enemies = enemies;\r\n    }\r\n\r\n    create() {\r\n        const map = this.scene.make.tilemap({ key: this.tilemapKey });\r\n        const tileset = map.addTilesetImage(\"Terrain (16x16)\", \"tiles\");\r\n        const tilesetBackground = map.addTilesetImage(\"Blue\", \"tiles-background-blue\");\r\n\r\n        const background = map.createLayer(\"Background\", tilesetBackground, 0, 0);\r\n        const groundBlocks = map.createLayer(\"GroundBlocks\", tileset, 0, 0);\r\n        groundBlocks.setCollisionByProperty({ collider: true });\r\n        this.scene.physics.add.collider(this.player, groundBlocks);\r\n        for (const enemy of this.enemies) {\r\n            this.scene.physics.add.collider(enemy.sprite, groundBlocks);\r\n        }\r\n\r\n        background.setScale(2);\r\n        groundBlocks.setScale(2);\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/tilemap/Tilemap.js?");

/***/ }),

/***/ "./src/traps/Traps.js":
/*!****************************!*\
  !*** ./src/traps/Traps.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Traps)\n/* harmony export */ });\nclass Traps {\r\n    constructor(scene, player) {\r\n        this.scene = scene;\r\n        this.player = player;\r\n        this.spikes = [];\r\n    }\r\n\r\n    create() {\r\n        // Add overlap detection between the player and spikes\r\n        this.spikes.forEach(spike => {\r\n            this.scene.physics.add.overlap(spike, this.player, this.player.playerDeath, null, this.player);\r\n        });\r\n    }\r\n\r\n    addSpike(x, y, rotation = 0) {\r\n        const spike = this.scene.physics.add.sprite(x, y, 'spike');\r\n        spike.setDepth(2);\r\n        spike.body.setAllowGravity(false);\r\n        spike.body.setImmovable(true);\r\n        spike.setScale(4);\r\n        spike.setRotation(rotation);\r\n        \r\n        if (rotation == Math.PI / 2) {\r\n            spike.body.setSize(10, 10);\r\n            spike.body.setOffset(-2, 3);\r\n        }\r\n        else if (rotation == (Math.PI / 2) * 2) {\r\n            spike.body.setSize(10, 10);\r\n            spike.body.setOffset(4, -5);\r\n        }\r\n        else if (rotation != 0) {\r\n            spike.body.setSize(0.05, 10);\r\n            spike.body.setOffset(10, 3);\r\n        } else {\r\n            spike.body.setSize(10, 0.1);\r\n            spike.body.setOffset(1.5, 10);\r\n        }\r\n        this.spikes.push(spike);\r\n    }\r\n}\n\n//# sourceURL=webpack://jumpingfrogquest/./src/traps/Traps.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/Main.js");
/******/ 	
/******/ })()
;